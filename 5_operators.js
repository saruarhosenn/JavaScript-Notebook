/*
কয়েক রকমের Operators আছে। যেমনঃ
=================================== 
1) Arithmetic Operators
2) Relational / Comparison Operators
3) Assignment Operators
4) Logical Operators
5) Conditional / Ternary Operators

=> Operand কি?
উত্তরঃ Operator এর ডানে এবং বামের সংখ্যা গুলিকে Operand বলে। যেমনঃ (let x = 10 + 49;) এখানে প্লাস অপারেটর এর আগে ১০ এবং প্লাস অপারেটর এর পরের ৪৯ এইগুলা হলো অপারেন্ড।  

1) Arithmetic Operators: 
=========================
এই Operator দ্বারা যোগ, বিয়োগ, গুন, ভাগ, ভাগশেষের কাজ এবং Increment, Decrement এর কাজ করা হয়। Arithmetic Operators গুলা হলোঃ
(1) + Addition (যোগের কাজ করে)

(2) - Subtraction (বিয়োগের কাজ করে)

(3) * Multiplication (গুনের কাজ করে)

(4) / Division (ভাগের কাজ করে)

(5) % Modulus / Division Remainder (ভাগশেষ বের করার জন্য ব্যবহার হয়) 

(6) ++ Increment 
(এটা অপারেন্ডের সঙ্গে ১ যোগ করবে। মনে করি আমাদের x নামে একটা variable আছে, যার value হচ্ছে 10, এখন x++ অথবা ++x লিখলে x এর value এর সঙ্গে 1 যোগ হয়ে 11 হয়ে যাবে। এটা x = x + 1 এর সর্টকাট)

(7) -- Decrement 
(এটা অপারেন্ডের সঙ্গে ১ বিয়োগ করবে। মনে করি আমাদের x নামে একটা variable আছে, যার value হচ্ছে 10, এখন x-- অথবা --x লিখলে x এর value এর সঙ্গে 1 বিয়োগ হয়ে 9 হয়ে যাবে। এটা x = x - 1 এর সর্টকাট)
নোটঃ Incremental, Decremental Operator গুলা Variable এর আগে এবং পরে দুই পজিশনেই বসতে পারে। পার্থক্য হলো আগে বসলে (++x, --x) x এর Increment, Decrement আগে হবে, তারপর value রিটার্ন করবে। আর যদি পরে বসে 
(x++, x--) তাহলে x কে আগে রিটার্ন করবে, তারপর x এর Increment, Decrement হবে। 
*/
// Increment & Decrement উদাহরনঃ 
//-------------------------------
let price1 = 10;
let price2 = 86;
console.log(++price1);
console.log(--price1);
console.log(price2++);
console.log(price2--);


/*
2) Comparison Operators: 
=========================
একটার সাথে আরেকটার কম্পেয়ার করার জন্য এই অপারেটর ব্যবহার করা হয়। 

(1) == Equal to 
(দুইটার ভ্যালু সমান কিনা তা দেখার জন্য Equal to ব্যবহার হয়। সমান হলে সত্য (true), সমান না হলে মিথ্যা (false) দেখাবে। দুইটার ভ্যালুর টাইপ যদি ভিন্ন ভিন্নও হয়, তারপরও তাদের বিশেষ নিয়ম অনুযায়ী তাদের একটা টাইপ পরিবর্তন হয়ে, দুইটা একই টাইপের হয়ে তারপর সমান কিনা তা দেখাবে। যেমনঃ 10==10 এখানে তারা একই টাপের এবং তারা সমান (true) দেখাবে। 10=="10" এখানে তারা সমান কিন্তু টাইপ ভিন্ন,তারপরও তাদের বিশেষ নিয়ম অনুযায়ী স্ট্রিং "10" এর টাইপ number এ পরিবর্তন হয়ে, দুইটা একই টাইপের হয়ে (true) দেখাবে।)  

(2) === Equal value and equal type 
(দুইটার ভ্যালু সমান কিনা তা দেখার জন্য Equal to ব্যবহার হয়। সমান হলে সত্য (true), সমান না হলে মিথ্যা (false) দেখাবে। দুইটার ভ্যালুর টাইপ যদি ভিন্ন ভিন্ন হয়, মিথ্যা (false) দেখাবে। যেমনঃ 10==10 এখানে তারা একই টাপের এবং তারা সমান সত্য (true) দেখাবে। আবার 10=="10" এখানে তারা সমান কিন্তু টাইপ ভিন্ন, তাই মিথ্যা (false) দেখাবে।) 

(3) != Not equal
(দুইটার ভ্যালু সমান না হলে সত্য (true) দেখাবে এবং সমান হলে মিথ্যা (false) দেখাবে। যেমনঃ 10!=9; এখানে দুইটার ভ্যালু সমান না তাই সত্য (true) দেখাবে। আবার 10!=10 এখানে দুইটার ভ্যালু সমান তাই মিথ্যা (false) দেখাবে।)

(4) !== Not equal value or not equal type
(দুইটার ভ্যালু সমান না হলে সত্য (true) দেখাবে এবং সমান হলে মিথ্যা (false) দেখাবে। যেমনঃ 10!=9; এখানে দুইটার ভ্যালু সমান না তাই সত্য (true) দেখাবে। আবার 10!=10 এখানে দুইটার ভ্যালু সমান তাই মিথ্যা (false) দেখাবে।)

(5) > Greater than
(একটা আরেকটা থেকে বড় কিনা তা দেখার জন্য। বড় হলে সত্য (true) দেখাবে, আর ছোট হলে মিথ্যা (false) দেখাবে। যেমনঃ 10>9 এখানে 10 কি 9 থেকে বড়? সত্য (true)। 9>10 এখানে 9 কি 10 থেকে বড়? মিথ্যা (false)। 
20>20 এখানে 20 কি 20 থেকে বড়? মিথ্যা (false))

(6) < Less than
(একটা আরেকটা থেকে ছোট কিনা তা দেখার জন্য। ছোট হলে সত্য (true) দেখাবে, আর বড় হলে মিথ্যা (false) দেখাবে। যেমনঃ 10<20 এখানে 10 কি 20 থেকে ছোট? সত্য (true)।  20<10 এখানে 20 কি 10 থেকে ছোট মিথ্যা (false)। 20<20 এখানে 20 কি 20 থেকে বড়? মিথ্যা (false)) 

(7) >= Greater than or equal to
(একটা আরেকটা থেকে বড় অথবা সমান কিনা তা দেখার জন্য। বড় অথবা সমান হলে সত্য (true) দেখাবে, আর তা না হলে মিথ্যা (false) দেখাবে। 20>=20 এখানে 20 কি 20 থেকে বড় অথবা সমান? সত্য (true)। 9>=10 এখানে 9 কি 10 থেকে বড় অথবা সমান? মিথ্যা (false))

(8) <= Less than or equal to   
(একটা আরেকটা থেকে ছোট অথবা সমান কিনা তা দেখার জন্য। ছোট অথবা সমান হলে সত্য (true) দেখাবে, আর তা না হলে মিথ্যা (false) দেখাবে। 20<=20 এখানে 20 কি 20 থেকে ছোট অথবা সমান? সত্য (true)। 9<=10 এখানে 9 কি 10 থেকে ছোট অথবা সমান? মিথ্যা (false)) 
*/


/*
3) Assignment Operators:
=========================
Assignment Operators এর কাজ হচ্ছে কোনো কিছুকে Assign করা। যেমনঃ
*/
let x = 10;
x = x + 10; /*অথবা, আমরা এইভাবে সর্টকাট লিখতে পারি*/ x+=10; // Result: 20
x = x - 10; /*অথবা, আমরা এইভাবে সর্টকাট লিখতে পারি*/ x-=10; // Result: 0;
x = x * 10; /*অথবা, আমরা এইভাবে সর্টকাট লিখতে পারি*/ x*=10; // Result: 100;
x = x / 10; /*অথবা, আমরা এইভাবে সর্টকাট লিখতে পারি*/ x/=10; // Result: 1;
x = x % 10; /*অথবা, আমরা এইভাবে সর্টকাট লিখতে পারি*/ x%=10; // Result: 0;
x = x - 10; /*অথবা, আমরা এইভাবে সর্টকাট লিখতে পারি*/ x-=10; // Result: 0;
x = x - 10; /*অথবা, আমরা এইভাবে সর্টকাট লিখতে পারি*/ x-=10; // Result: 0; 


/*
4) Logical / Relational Operators:
==================================
Logical / Relational Operators হচ্ছে ৩ টি। যেমনঃ

(1) &&(লজিকাল এন্ড): এর কাজ হচ্ছে প্রত্যেকটাই শর্তই true হতে হবে। শর্তগুলার মাঝে একটাও যদি false হয়, তাহলে পুরাটাই মিথ্যা। 

(2) ||(লজিকাল অর): এর কাজ হচ্ছে শর্তগুলার মাঝে যেকোনো একটাও যদি true হয়, তাহলে পুরাটাই true, আর যদি প্রত্যেকটাই শর্তই মিথ্যা হয়, তাহলে পুরাটাই মিথ্যা।

(3) !(লজিকাল নট): এর কাজ হচ্ছে কোনো কিছু true হলে false করা এবং false হলে true করা। 
*/
 

/*
(5) Conditional / Ternary Operators: 
====================================
(.... ? .... : ....) এটা আরেকটা শর্টকাট। এখানে এই ? : দুইটা স্পেশাল কারেক্টার ব্যবহার হয়।
-------------------------------------------------------------------------------------- 
যদি কন্ডিশন সত্যি হয় ? তাহলে ভ্যালু এটা ...... : আর যদি কন্ডিশন সত্যি না হয়, তাহলে এই ভ্যালুটা
--------------------------------------------------------------------------------------
*/


/*
(6) typeof Operators: 
=====================
এটা দিয়ে ডেটা কি টাইপের তা চেক করা হয়। যেমনঃ 
*/
let a = 13700;
let b = "Saruar Hosen";
let c = true;

console.log(typeof a); // Result: Data type - Number
console.log(typeof b); // Result: Data type - String
console.log(typeof c); // Result: Data type - Boolean




